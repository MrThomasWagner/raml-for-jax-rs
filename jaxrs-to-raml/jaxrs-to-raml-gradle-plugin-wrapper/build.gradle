/**
 * Copyright 2013-2015 (c) MuleSoft, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'org.raml.jaxrs'
version = System.getProperty('artifactVersion')
description '''RAML JAX-RS-TO-RAML Gradle Plug-in'''

sourceCompatibility = '1.6'


gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign }) {

        // limitations in my knowledge of gradle ?
        allprojects { ext."signing.gnupg.executable" = System.getenv("GPG_EXECUTABLE") }
        allprojects { ext."signing.keyId" = "0BC1B7B9" }
        allprojects { ext."signing.password" = System.getenv("GPG_PASSPHRASE") }
        allprojects { ext."signing.secretKeyRingFile" = System.getenv("HOME") + "/.gnupg/secring.gpg" }
    }
}

if (System.getProperty("gradleSonatype") != null) {
    println "signing: enabled"
    apply plugin: 'signing'
    apply plugin: 'io.codearte.nexus-staging'
    apply plugin: 'com.bmuschko.nexus'

/*
    signing {
        sign configurations.archives
    }
*/
    nexusStaging {
        packageGroup = 'org.raml'
        numberOfRetries = 20
        delayBetweenRetriesInMillis = 4000

        username = System.getenv("OSSRH_USER")
        password = System.getenv("OSSRH_PASSWORD")
    }

    ext."nexusUsername" = System.getenv("OSSRH_USER")
    ext."nexusPassword" = System.getenv("OSSRH_PASSWORD")
}


buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0'
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.4'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}

ext {
    gradleVersion = '1.11'
    spockVersion = '1.0-groovy-2.4' // Gradle API currently uses 1.8.6 of Groovy and there is no way to exclude/replace it (currently).
}

repositories {
    mavenLocal()
    //if(additionalRepoUrl) {
    //    maven { url additionalRepoUrl }
    //}
    maven { url 'https://repository.mulesoft.org/snapshots/' }
    maven { url 'https://repository.mulesoft.org/releases/' }
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.raml.jaxrs:jaxrs-to-raml-core:' + version
    compile 'commons-io:commons-io:2.4'

    testCompile('org.spockframework:spock-core:$spockVersion') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:2.2.2'
    testCompile 'junit:junit-dep:4.11'
    testCompile 'org.objenesis:objenesis:1.2'
}

test {
    filter {
        includeTestsMatching '*Test'
        includeTestsMatching '*Spec'
    }
}

// publishing

/*
task sourcesJar(type: Jar) {
  classifier 'sources'
  from sourceSets.main.allSource
}
*/

/*
task javadocJar(type: Jar) {
  classifier 'javadoc'
  from javadoc
}
*/

/*
artifacts {
  archives
}
*/

modifyPom {
    project {
        name 'JAXRS to RAML Gragle Plugin'
        description 'JAXRS to RAML generator'
        url 'https://github.com/mulesoft-labs/raml-for-jax-rs'
        inceptionYear '2017'

        scm {
            connection 'scm:git:https://github.com/mulesoft-labs/raml-for-jax-rs.git'
            url 'https://github.com/mulesoft-labs/raml-for-jax-rs'
            developerConnection 'scm:git:https://github.com/mulesoft-labs/raml-for-jax-rs.git'
        }

        scm {
            connection 'scm:git:https://github.com/mulesoft-labs/raml-for-jax-rs.git'
            url 'https://github.com/mulesoft-labs/raml-for-jax-rs'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0'
            }
        }

        developers {
            developer {
                name 'Jean-Philippe Belanger'
            }
            developer {
                name 'Jonathan Stoikovitch'
            }
        }
    }
}


publishing {
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "https://repository-master.mulesoft.org/${System.getProperty('repo')}"
            credentials {
                username = "${System.env.NEXUS_USER}"
                password = "${System.env.NEXUS_PASSWORD}"
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java

/*
            artifact sourcesJar {
                classifier "sources"
            }
*/

        }
    }
}

